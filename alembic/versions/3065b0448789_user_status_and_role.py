"""user status and role

Revision ID: 3065b0448789
Revises: 8b7a091cfe8e
Create Date: 2024-11-22 23:05:50.934505

"""
from enum import Enum
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3065b0448789'
down_revision: Union[str, None] = '8b7a091cfe8e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

class UserStatus(Enum):
    ACTIVE = "active"
    SUSPENDED = "suspended"
    
class UserRole(Enum):
    ADMIN = "admin"
    CLIENT = "client"
    MANAGER = "manager"

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    user_status_enum = sa.Enum(UserStatus, name="user_status")
    user_status_enum.create(op.get_bind(), checkfirst=True)
    
    user_role_enum = sa.Enum(UserRole, name="user_role")
    user_role_enum.create(op.get_bind(), checkfirst=True)
    
    op.add_column('users', sa.Column('status', user_status_enum, nullable=False))
    op.add_column('users', sa.Column('role', user_role_enum, nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'status')
    op.drop_column('users', 'role')
    
    user_status_enum = sa.Enum(UserStatus, name="user_status")
    user_status_enum.drop(op.get_bind(), checkfirst=True)
    
    user_role_enum = sa.Enum(UserRole, name="user_role")
    user_role_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
